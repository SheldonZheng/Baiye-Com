group 'website.baiye'
version '1.0'

apply plugin: 'scala'
apply plugin: 'java'

apply plugin: 'application' //可选(可自动生成shell启动脚本)
mainClassName = 'AppDemo' //可选（与上行的application插件配套出现）

//这里是关键（把java与scala的源代码目录全映射到scala上,
// 这样gradle compileScala时就能同时编译java与scala的源代码）
sourceSets {
    main {
        scala {
            srcDirs = ['src/main/scala', 'src/main/java']
        }
        java {
            srcDirs = []
        }
    }

    test {
        scala {
            srcDirs = ['src/test/scala', 'src/test/java']
        }
        java {
            srcDirs = []
        }
    }
}

//可选（项目初始化时,可用gradle cDirs生成scala及java的src目录）
task "createDirs" << {
    sourceSets*.scala.srcDirs*.each { it.mkdirs() }
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

repositories {
    mavenLocal()
    maven { url 'http://baiye.website:8081/repository/maven-public/' }
    mavenCentral()
}

dependencies {

    compile group: 'org.scala-lang', name: 'scala-library', version: '2.11.8'

    compile group: 'org.scala-lang', name: 'scala-reflect', version: '2.11.8'

    compile group: 'io.netty', name: 'netty-all', version: '4.1.5.Final'

    testCompile "junit:junit:4.11"
}

//可选,如果想让生成的jar可直接运行,建议加上
jar {
    manifest {
        attributes 'Main-Class': 'AppDemo'
    }
}